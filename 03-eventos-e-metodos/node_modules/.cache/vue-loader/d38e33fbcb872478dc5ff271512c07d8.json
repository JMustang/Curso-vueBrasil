{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/junior/Documentos/www/FRONTEND/vueBrasil/eventos-e-metodos/app.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/junior/Documentos/www/FRONTEND/vueBrasil/eventos-e-metodos/app.vue","mtime":1618166968900},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGZvY3VzID0gewogICAgaW5zZXJ0ZWQ6IChlbCkgPT4gewogICAgICAgIGVsLmZvY3VzKCkKICAgIH0KfQpleHBvcnQgZGVmYXVsdCB7CiAgICBkaXJlY3RpdmVzOiB7CiAgICAgICAgZm9jdXMKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIGN1cnJlbnRUYXNrOiAiIiwKICAgICAgICBzaG93TGlzdDogZmFsc2UsCiAgICAgICAgdGFza3M6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogJ0ZhemVyIGN1cnNvJywKICAgICAgICAgICAgICAgIGlzRG9uZTogZmFsc2UgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgIF0KICAgIH0pLAogICAgbWV0aG9kczogewogICAgICAgIGhhbmRsZVNob3dIaWRlTGlzdCgpewogICAgICAgIHRoaXMuc2hvd0xpc3QgPSAhdGhpcy5zaG93TGlzdAogICAgICAgIH0sIAogICAgICAgIGFkZFRhc2sgKCkgewogICAgICAgICAgICB0aGlzLnRhc2tzLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogdGhpcy5jdXJyZW50VGFzaywKICAgICAgICAgICAgICAgIGlzRG9uZTogZmFsc2UKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5jdXJyZW50VGFzaz0gJycKICAgICAgICB9LAogICAgICAgIGNvbXBsZXRlICh0YXNrKXsKICAgICAgICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5tYXAodCA9PiB7CiAgICAgICAgICAgICAgIGlmICh0Lm5hbWUgPT09IHRhc2submFtZSl7CiAgICAgICAgICAgICAgICAgICByZXR1cm4gey4uLnQsIGlzRG9uZTogIXQuaXNEb25lfQogICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgIHJldHVybiB7Li4udH0KICAgICAgICAgICB9KSAKICAgICAgICB9LAogICAgICAgIHJlbW92ZSh0YXNrKSB7CiAgICAgICAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcih0ID0+IHQubmFtZSAhPT0gdGFzay5uYW1lKQogICAgICAgIH0KICAgIH0KfQoK"},{"version":3,"sources":["app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.vue","sourceRoot":".","sourcesContent":["<template>\n    <div>\n    <h1>Minha lista de Tarefas!</h1>\n    <button @click=\"handleShowHideList\">\n        ver lista\n    </button>\n    <br>\n    <input \n    type=\"text\"\n    @keyup.enter=\"addTask\"\n    v-focus\n    v-model=\"currentTask\">\n    <ul v-if=\"showList\">\n        <li\n            v-for=\"(task, index) in tasks\"\n            @dblclick=\"complete(task)\"\n            :key=\"`${task}-${index}`\"\n            class=\"task-item\"\n            :class=\"{\n                'line-through': task.isDone\n            }\"\n        >\n        {{task.name}}\n        <button\n            @click=\"remove(task)\"\n        >&times;</button>\n        </li>\n    </ul>\n    <p v-else>Lista escondida!</p>\n    </div>\n</template>\n<script>\nconst focus = {\n    inserted: (el) => {\n        el.focus()\n    }\n}\nexport default {\n    directives: {\n        focus\n    },\n    data: () => ({\n        currentTask: \"\",\n        showList: false,\n        tasks: [\n            {\n                name: 'Fazer curso',\n                isDone: false            \n            }\n        ]\n    }),\n    methods: {\n        handleShowHideList(){\n        this.showList = !this.showList\n        }, \n        addTask () {\n            this.tasks.push({\n                name: this.currentTask,\n                isDone: false\n            })\n            this.currentTask= ''\n        },\n        complete (task){\n           this.tasks = this.tasks.map(t => {\n               if (t.name === task.name){\n                   return {...t, isDone: !t.isDone}\n               }\n               return {...t}\n           }) \n        },\n        remove(task) {\n            this.tasks = this.tasks.filter(t => t.name !== task.name)\n        }\n    }\n}\n\n</script>\n<style scoped>\n    .line-through{\n        text-decoration: line-through;\n    }\n    .task-item{\n        cursor: pointer;\n    }\n</style>"]}]}